==262792== Memcheck, a memory error detector
==262792== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==262792== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==262792== Command: ./bank ../input-1.txt
==262792== 
Processing transactions (multi-threaded)
Creating worker thread 0 to process transactions 0-12000
Creating worker thread 1 to process transactions 12000-24000
Creating worker thread 2 to process transactions 24000-36000
Creating worker thread 3 to process transactions 36000-48000
Creating worker thread 4 to process transactions 48000-60000
Creating worker thread 5 to process transactions 60000-72000
Creating worker thread 6 to process transactions 72000-84000
Creating worker thread 7 to process transactions 84000-96000
Creating worker thread 8 to process transactions 96000-108000
Creating worker thread 9 to process transactions 108000-120000
Waiting for all threads to complete
Worker thread 5 finished.
Worker thread 0 finished.
Worker thread 6 finished.
Worker thread 4 finished.
Worker thread 1 finished.
Worker thread 8 finished.
Worker thread 2 finished.
Worker thread 7 finished.
Worker thread 3 finished.
Worker thread 9 finished.
All workers finshed. Creating bank thread to update balances
All balances updated. Goodbye!
==262792== 
==262792== HEAP SUMMARY:
==262792==     in use at exit: 0 bytes in 0 blocks
==262792==   total heap usage: 880,376 allocs, 880,376 frees, 24,784,942 bytes allocated
==262792== 
==262792== All heap blocks were freed -- no leaks are possible
==262792== 
==262792== For lists of detected and suppressed errors, rerun with: -s
==262792== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==262793== 
==262793== HEAP SUMMARY:
==262793==     in use at exit: 0 bytes in 0 blocks
==262793==   total heap usage: 2 allocs, 2 frees, 4,568 bytes allocated
==262793== 
==262793== All heap blocks were freed -- no leaks are possible
==262793== 
==262793== For lists of detected and suppressed errors, rerun with: -s
==262793== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
